{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "SchemaLib",
	"scopeName": "source.schemalib",
	"fileTypes": [
		"slib",
		"schemalib"
	],
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#namespace"
		},
		{
			"include": "#use"
		},
		{
			"include": "#metaVars"
		},
		{
			"name": "declaration.meta.type",
			"comment": "a schemalib type",
			"match": "(type|app|service|enum)\\s*([_A-Za-z][_0-9A-Za-z]*)\\s*(extends)?\\s*([_A-Za-z][_0-9A-Za-z]*)?",
			"captures": {
				"1": {
					"name": "keyword"
				},
				"2": {
					"name": "entity.name.type"
				},
				"3": {
					"name": "keyword"
				},
				"4": {
					"name": "entity.other.inherited-class"
				}
			}
		},
		{
			"name": "meta.operation",
			"comment": "an operation definition",
			"match": "(query|mutation)\\s*([_A-Za-z][_0-9A-Za-z]*)",
			"captures": {
				"1": {
					"name": "storage.type"
				},
				"2": {
					"name": "variable.other"
				}
			}
		},
		{
			"include": "#arguments"
		},
		{
			"include": "#selections"
		}
	],
	"repository": {
		"namespace": {
			"match": "(namespace)\\s*([_0-9A-Za-z\\.\\/]*)",
			"captures": {
				"1": {
					"name": "support.function"
				},
				"2": {
					"name": "string.unquoted"
				}
			}
		},
		"use": {
			"match": "(use)\\s*([_0-9A-Za-z\\.\\/]*)",
			"captures": {
				"1": {
					"name": "support.function"
				},
				"2": {
					"name": "string.unquoted"
				}
			}
		},
		"string": {
			"name": "string.quoted.double",
			"begin": "\"",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin"
				}
			},
			"end": "\"",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end"
				}
			},
			"patterns": [
				{
					"include": "#escapedChar"
				}
			]
		},
		"variable": {
			"name": "constant.other.symbol",
			"match": "\\$[_A-Za-z][_0-9A-Za-z]*"
		},
		"boolean": {
			"name": "constant.language.boolean",
			"match": "true|false"
		},
		"number": {
			"name": "constant.numeric",
			"match": "\\d+\\.?\\d*[eE]?[\\+\\-]?\\d*"
		},
		"argument": {
			"name": "variable.parameter",
			"match": "[_A-Za-z][_0-9A-Za-z]*:"
		},
		"enum": {
			"name": "support.constant.enum",
			"match": "[_A-Za-z][_0-9A-Za-z]*"
		},

		"arguments": {
			"name": "meta.arguments",
			"begin": "\\(",
			"beginCaptures": {
				"0": {
					"name": "meta.brace.round.schemalib"
				}
			},
			"end": "\\)",
			"endCaptures": {
				"0": {
					"name": "meta.brace.round.schemalib"
				}
			},
			"patterns": [
				
				{
					"include": "#metaVars"
				},
				{
					"include": "#argument"
				},
				{
					"include": "#string"
				},
				{
					"include": "#boolean"
				},
				{
					"include": "#variable"
				},
				{
					"include": "#number"
				},
				{
					"include": "#enum"
				},
				{
					"include": "#comments"
				}
			]
		},
		"selections": {
			"name": "meta.selections",
			"begin": "\\{",
			"beginCaptures": {
				"0": {
					"name": "meta.brace.curly.schemalib"
				}
			},
			"end": "\\}",
			"endCaptures": {
				"0": {
					"name": "meta.brace.curly.schemalib"
				}
			},
			"patterns": [
				{
					"include": "#metaVars"
				},
				{
					"include": "#fieldAlias"
				},
				{
					"include": "#arguments"
				},
				{
					"include": "#comments"
				},
				{
					"include": "#selections"
				}
			]
		},
		"comments": {
			"patterns": [
				
				{
					"name": "comment.line.number-sign.schemalib",
					"match": "(#.*$|//.*$)"
				},
				{
					"begin": "/\\*",
					"captures": {
						"0": {
							"name": "punctuation.definition.comment.php"
						}
					},
					"end": "\\*/",
					"name": "comment.block.php"
				}
			]
		},
		"escapedChar": {
			"match": "\\\\(?:u[\\da-fA-f]{4}|.)",
			"name": "constant.character.escape.schemalib"
		},
		"fieldAlias": {
			"match": "[_A-Za-z][_0-9A-Za-z]*:",
			"name": "variable.other.alias.schemalib"
		},
		"metaVars": {
			"match": "@[_A-Za-z][_0-9A-Za-z]*:",
			"name": "meta.selector"
		}
	}
}